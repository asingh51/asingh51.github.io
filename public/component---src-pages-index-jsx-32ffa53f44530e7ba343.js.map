{"version":3,"file":"component---src-pages-index-jsx-32ffa53f44530e7ba343.js","mappings":"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","sources":["webpack://portfolio-gatsby/./src/data/projects.js","webpack://portfolio-gatsby/./src/components/ImpactCard.jsx","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://portfolio-gatsby/./node_modules/motion-utils/dist/es/memo.mjs","webpack://portfolio-gatsby/./node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","webpack://portfolio-gatsby/./node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","webpack://portfolio-gatsby/./node_modules/motion-dom/dist/es/animation/controls/Group.mjs","webpack://portfolio-gatsby/./node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","webpack://portfolio-gatsby/./node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","webpack://portfolio-gatsby/./node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","webpack://portfolio-gatsby/./node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","webpack://portfolio-gatsby/./node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","webpack://portfolio-gatsby/./node_modules/motion-dom/dist/es/utils/supports/flags.mjs","webpack://portfolio-gatsby/./node_modules/motion-dom/dist/es/utils/supports/memo.mjs","webpack://portfolio-gatsby/./node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","webpack://portfolio-gatsby/./node_modules/motion-utils/dist/es/progress.mjs","webpack://portfolio-gatsby/./node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","webpack://portfolio-gatsby/./node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","webpack://portfolio-gatsby/./node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","webpack://portfolio-gatsby/./node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","webpack://portfolio-gatsby/./node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","webpack://portfolio-gatsby/./node_modules/motion-dom/dist/es/gestures/hover.mjs","webpack://portfolio-gatsby/./node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","webpack://portfolio-gatsby/./node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","webpack://portfolio-gatsby/./node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","webpack://portfolio-gatsby/./node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","webpack://portfolio-gatsby/./node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","webpack://portfolio-gatsby/./node_modules/motion-dom/dist/es/gestures/press/index.mjs","webpack://portfolio-gatsby/./node_modules/motion-utils/dist/es/time-conversion.mjs","webpack://portfolio-gatsby/./node_modules/motion-utils/dist/es/noop.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","webpack://portfolio-gatsby/./node_modules/motion-utils/dist/es/errors.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/utils/mix/number.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/utils/mix/color.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/utils/mix/complex.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/utils/mix/index.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://portfolio-gatsby/./node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/frameloop/microtask.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/components/create-factory.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","webpack://portfolio-gatsby/./node_modules/framer-motion/dist/es/render/components/motion/create.mjs","webpack://portfolio-gatsby/./src/pages/index.jsx"],"sourcesContent":["export const featured = [\n  {\n    title: \"Vaccine Admin Management System Re‑host (CDC)\",\n    role: \"Senior Full‑Stack Engineer / Team Lead\",\n    timeframe: \"2024–2025\",\n    bullets: [\n      \"Re‑platformed to AWS; improved scalability & resiliency across microservices.\",\n      \"Cut infra spend by multi‑million with right‑sizing, autoscaling, and S3 lifecycle policies.\",\n      \"Led 6 devs; introduced code review rubric and pairing rotations to raise quality.\"\n    ]\n  },\n  {\n    title: \"HL7 Rules Engine & eICR GenAI pipeline\",\n    role: \"Lead Engineer\",\n    timeframe: \"2024\",\n    bullets: [\n      \"Designed rules engine for OBX regrouping; reduced processing time by 40%.\",\n      \"Prototyped Bedrock‑powered extraction achieving 92% F1 on pilot dataset.\",\n      \"Coordinated with epidemiology SMEs to validate data quality KPIs.\"\n    ]\n  },\n  {\n    title: \"JobMinglr — Swipe‑to‑match hiring platform\",\n    role: \"Founder / Tech Lead\",\n    timeframe: \"2023–present\",\n    bullets: [\n      \"Built React/Gatsby front‑end, Node/Express API, and AWS infra (S3, Lambda, CFN).\",\n      \"Designed resume‑matching heuristics (skills, salary, location) and ATS integration.\",\n      \"Drove 20% faster screening for pilot recruiters; 15% better candidate fit.\"\n    ]\n  }\n];\n","import React from \"react\";\n\nconst ImpactCard = ({ title, role, timeframe, bullets }) => (\n  <div className=\"rounded-2xl border p-6 shadow-sm hover:shadow-md transition\">\n    <div className=\"flex items-baseline justify-between\">\n      <h3 className=\"text-lg font-semibold\">{title}</h3>\n      <span className=\"text-xs text-gray-500\">{timeframe}</span>\n    </div>\n    <p className=\"text-sm mt-1 text-gray-600\">Role: {role}</p>\n    <ul className=\"list-disc pl-5 mt-3 space-y-1 text-sm\">\n      {bullets.map((b, i) => <li key={i}>{b}</li>)}\n    </ul>\n  </div>\n);\n\nexport default ImpactCard;\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { progress } from 'motion-utils';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\n/**\n * Filter out events that are not pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        callback(event);\n    };\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = filterEvents((enterEvent) => {\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = filterEvents((leaveEvent) => {\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        });\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    });\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(elementOrSelector, onPressStart, options = {}) {\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = (startEvent) => {\n        const element = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\n            return;\n        isPressing.add(element);\n        const onPressEnd = onPressStart(startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n                return;\n            }\n            isPressing.delete(element);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, options.useGlobalTarget ||\n                isNodeOrChild(element, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach((element) => {\n        if (!isElementKeyboardAccessible(element) &&\n            element.getAttribute(\"tabindex\") === null) {\n            element.tabIndex = 0;\n        }\n        const target = options.useGlobalTarget ? window : element;\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.18.2\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !transformTemplate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from 'motion-dom';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from 'motion-utils';\nimport { setDragLock } from 'motion-dom';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe)\n            register(id);\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { getValueTransition } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.18.2\", `Attempting to mix Motion versions ${nextValue.version} with 11.18.2 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","import React from \"react\";\nimport Layout from \"../components/Layout\";\nimport SEO from \"../components/SEO\";\nimport { featured } from \"../data/projects\";\nimport ImpactCard from \"../components/ImpactCard\";\nimport { motion } from \"framer-motion\";\n\nexport default function Home() {\n  return (\n    <Layout>\n      <SEO />\n      <section className=\"max-w-6xl mx-auto px-6 pt-16 pb-8\">\n        <motion.h1 initial={{opacity:0, y:10}} animate={{opacity:1, y:0}} transition={{duration:0.4}} className=\"text-3xl sm:text-4xl font-bold leading-tight\">\n          Senior Software Engineer → <span className=\"text-brand\">Tech Lead</span>\n        </motion.h1>\n        <p className=\"mt-4 max-w-2xl text-gray-600\">\n          I design scalable systems and enable high‑performing teams. I care about clear architecture, measurable outcomes, and developer experience.\n        </p>\n        <div className=\"mt-8 grid md:grid-cols-2 gap-6\">\n          {featured.map((p, i) => <ImpactCard key={i} {...p} />)}\n        </div>\n      </section>\n\n      <section className=\"max-w-6xl mx-auto px-6 pb-16\">\n        <div className=\"rounded-2xl bg-gray-50 p-8 border\">\n          <h2 className=\"text-xl font-semibold\">What I bring as a Tech Lead</h2>\n          <ul className=\"mt-3 grid sm:grid-cols-2 gap-2 list-disc pl-5 text-sm\">\n            <li>Architecture first: clear boundaries, contracts, SLAs.</li>\n            <li>Delivery: ruthless prioritization, calm execution.</li>\n            <li>People: code reviews, mentoring, unblockers.</li>\n            <li>Quality: CI/CD, logs/metrics/traces by default.</li>\n          </ul>\n        </div>\n      </section>\n    </Layout>\n  );\n}\n"],"names":["featured","title","role","timeframe","bullets","_ref","React","className","map","b","i","key","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","args","get","_target","has","set","isAnimationControls","v","start","isKeyframesTarget","Array","isArray","shallowCompare","next","prev","prevLength","length","isVariantLabel","getValueState","visualElement","state","values","forEach","value","getVelocity","resolveVariantFromProps","props","definition","custom","current","velocity","undefined","variants","resolveVariant","getProps","variantPriorityOrder","variantProps","memo","callback","result","supportsScrollTimeline","window","ScrollTimeline","constructor","animations","this","stop","runAll","filter","Boolean","finished","Promise","all","animation","getAll","propName","setAll","newValue","attachTimeline","timeline","fallback","subscriptions","cancel","time","speed","startTime","duration","max","Math","methodName","controls","flatten","play","pause","complete","GroupPlaybackControls","then","onResolve","onReject","catch","transition","maxGeneratorDuration","calcGeneratorDuration","generator","done","Infinity","isGenerator","type","onfinish","isBezierDefinition","easing","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","_a","supportsLinearEasing","document","createElement","animate","opacity","e","progress","from","to","toFromDifference","generateLinearEasing","resolution","points","numPoints","round","substring","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","a","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","segmentEasing","isDragging","x","y","isDragActive","setupGesture","elementOrSelector","options","elements","scope","selectorCache","Element","root","querySelectorAll","resolveElements","gestureAbortController","AbortController","passive","signal","abort","filterEvents","event","pointerType","isNodeOrChild","parent","child","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","Set","isPressing","WeakSet","firePointerEvent","target","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","onPressStart","eventOptions","cancelEvents","startPress","startEvent","element","currentTarget","add","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","delete","upEvent","useGlobalTarget","cancelEvent","addEventListener","tagName","tabIndex","isElementKeyboardAccessible","getAttribute","focusEvent","handleKeydown","handleKeyup","enableKeyboardPress","seconds","millisecondsToSeconds","milliseconds","any","transformPropOrder","transformProps","positionalKeys","resolveFinalValueInKeyframes","MotionGlobalConfig","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","latestFrameData","triggerCallback","step","schedule","keepAlive","immediate","queue","process","frameData","clear","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","min","cancelFrame","frameSteps","requestAnimationFrame","clearTime","newTime","queueMicrotask","addUniqueItem","arr","item","indexOf","push","removeItem","index","splice","SubscriptionManager","handler","notify","numSubscriptions","getSize","velocityPerSecond","frameDuration","collectMotionValues","MotionValue","init","version","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","owner","isNaN","parseFloat","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","getPrevious","startAnimation","resolve","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","setMotionValue","hasValue","getValue","addValue","isMotionValue","addValueToWillChange","willChange","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","instantAnimationState","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","p","reverseEasing","backInOut","anticipate","pow","sin","acos","circInOut","isZeroValueString","test","isNone","clamp","number","parse","transform","alpha","scale","default","sanitize","floatRegex","singleColorRegex","isColorString","testProp","startsWith","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","name","slice","defaultValue","functionRegex","functions","join","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","z","perspective","transformPerspective","originX","originY","originZ","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","isComplete","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","warning","invariant","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","trim","splitCSSVariableRegex","getVariableValue","depth","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","testValueType","dimensionValueTypes","findDimensionValueType","find","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","canAnimate","keyframes","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","isNotNull","getFinalKeyframe","repeat","repeatType","resolvedKeyframes","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","reject","currentFinishedPromise","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","transformers","invisibleValues","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","calcGeneratorVelocity","resolveValue","prevT","springDefaults","granular","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","visualDuration","restSpeed","restDelta","isResolvedFromDuration","springOptions","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","playbackSpeed","pendingPlayState","teardown","onStop","KeyframeResolver$1","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","tick","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","supportsWaapi","unsupportedEasingFunctions","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","startWaapiAnimation","pendingTimeline","playbackRate","playState","sampleTime","supports","HTMLElement","transformTemplate","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","isControllingVariants","context","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","arguments","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","addDomEvent","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","isRefObject","ref","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","createContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","jsx","applyTo","boxShadow","compareByDepth","FlatTree","children","isDirty","timeout","checkElapsed","resolveMotionValue","unwrappedValue","toValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","includes","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","handleHoverEvent","lifecycle","handlePressEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","tap","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","LazyContext","strict","MotionConfigContext","isStatic","reducedMotion","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","isBrowser","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","onMount","useIsomorphicLayoutEffect","useLayoutEffect","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","lowercaseSVGElements","isSVGComponent","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","renderState","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","vars","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createHtmlRenderState","createSvgRenderState","tag","renderHTML","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","isForcedMotionValue","newValues","charAt","layoutProps","svgMotionConfig","needsMeasure","getBBox","updateSVGDimensions","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","motion","Home","Layout","SEO","h1","ImpactCard"],"sourceRoot":""}