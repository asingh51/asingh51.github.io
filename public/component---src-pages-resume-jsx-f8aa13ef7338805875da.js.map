{"version":3,"file":"component---src-pages-resume-jsx-f8aa13ef7338805875da.js","mappings":"kNAOA,MAAMA,EAAc,CAClBC,WAAY,CAAEC,IAAK,YAAaC,MAAO,mBAAoBC,KAAM,0BACjEC,SAAY,CAAEH,IAAK,MAAaC,MAAO,aAAoBC,KAAM,oBACjEE,QAAY,CAAEJ,IAAK,YAAaC,MAAO,oBAAqBC,KAAM,2BAIpE,SAASG,IACP,MAAM,EAACC,EAAI,EAACC,IAAUC,EAAAA,EAAAA,UAAS,KACzB,EAACC,EAAM,EAACC,IAAYF,EAAAA,EAAAA,UAAS,IAYnC,OACEG,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAACE,EAAAA,EAAG,CAACZ,MAAM,WACXU,EAAAA,cAAA,WAASG,UAAU,qCACjBH,EAAAA,cAAA,MAAIG,UAAU,sBAAqB,iBACnCH,EAAAA,cAAA,KAAGG,UAAU,8BAA6B,+DAC1CH,EAAAA,cAAA,QAAMI,SAhBMC,IAChBA,EAAEC,iBACF,MAAMC,EAAUpB,EAAYQ,EAAIa,QAC3BD,GAILE,EAAAA,EAAAA,UAAS,WAAWF,EAAQlB,OAH1BU,EAAS,sBAYmBI,UAAU,kBAClCH,EAAAA,cAAA,SACEU,KAAK,WACLC,YAAY,WACZC,MAAOjB,EACPkB,SAAWR,GAAMT,EAAOS,EAAES,OAAOF,OACjCT,UAAU,uCAEXL,GAASE,EAAAA,cAAA,KAAGG,UAAU,wBAAwBL,GAC/CE,EAAAA,cAAA,UACEU,KAAK,SACLP,UAAU,yFACX,YAOX,CAGA,SAASY,EAAaC,GAAkB,IAAjB,WAAEC,GAAYD,EAEnCE,QAAQC,IAAI,eAAgBhC,GAC5B+B,QAAQC,IAAI,cAAeF,GAC3B,MAAMG,EAAWC,OAAOC,OAAOnC,GAAaoC,OAAO,CAACC,EAAKC,KACvDD,EAAIC,EAAEpC,KAAOoC,EACND,GACN,CAAC,GACEC,EAAIL,EAASH,GAEnB,OAAKQ,EAaHzB,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAACE,EAAAA,EAAG,CAACZ,MAAOmC,EAAEnC,QACdU,EAAAA,cAAA,WAASG,UAAU,sCACjBH,EAAAA,cAAA,OAAKG,UAAU,qCACbH,EAAAA,cAAA,MAAIG,UAAU,sBAAsBsB,EAAEnC,OACtCU,EAAAA,cAAA,KACE0B,KAAMD,EAAElC,KACRY,UAAU,uCACVW,OAAO,SACPa,IAAI,cACL,iBAKH3B,EAAAA,cAAA,OAAKG,UAAU,0CACbH,EAAAA,cAAA,UACEV,MAAOmC,EAAEnC,MACTsC,IAAKH,EAAElC,KACPY,UAAU,SACV0B,MAAO,CAAEC,OAAQ,aA/BvB9B,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAACE,EAAAA,EAAG,CAACZ,MAAM,qBACXU,EAAAA,cAAA,WAASG,UAAU,qCACjBH,EAAAA,cAAA,MAAIG,UAAU,0BAAyB,aACvCH,EAAAA,cAAA,KAAGG,UAAU,sBAAqB,mEAiC5C,CAEe,SAAS4B,IAEtB,OACE/B,EAAAA,cAAAA,EAAAA,SAAA,KAEEA,EAAAA,cAACgC,EAAAA,OAAM,CAACC,SAAS,WACfjC,EAAAA,cAACN,EAAU,CAACwC,KAAK,MAEjBlC,EAAAA,cAACe,EAAa,CAACmB,KAAK,kBAI5B,C","sources":["webpack://portfolio-gatsby/./src/pages/resume.jsx"],"sourcesContent":["// src/pages/resume.jsx\nimport React, { useState } from \"react\";\nimport { Router, navigate } from \"@reach/router\";\nimport Layout from \"../components/Layout\";\nimport SEO from \"../components/SEO\";\n\n// Map passwords -> profiles (title + file path)\nconst PROFILE_MAP = {\n  OpenSesame: { key: \"tech-lead\", title: \"Tech Lead Resume\", file: \"/resumes/tech-lead.pdf\" },\n  PrimeTPM:   { key: \"tpm\",       title: \"TPM Resume\",       file: \"/resumes/tpm.pdf\" },\n  FSX2025:    { key: \"fullstack\", title: \"Full-Stack Resume\", file: \"/resumes/fullstack.pdf\" },\n};\n\n// Landing gate\nfunction ResumeGate() {\n  const [pwd, setPwd] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const profile = PROFILE_MAP[pwd.trim()];\n    if (!profile) {\n      setError(\"Invalid password.\");\n      return;\n    }\n    navigate(`/resume/${profile.key}`);\n  };\n\n  return (\n    <Layout>\n      <SEO title=\"Resume\" />\n      <section className=\"max-w-md mx-auto px-6 pt-16 pb-24\">\n        <h1 className=\"text-3xl font-bold\">Resume Access</h1>\n        <p className=\"mt-3 text-gray-600 text-sm\">Enter the password you were given to view the right resume.</p>\n        <form onSubmit={onSubmit} className=\"mt-6 space-y-3\">\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            value={pwd}\n            onChange={(e) => setPwd(e.target.value)}\n            className=\"w-full rounded-xl border px-4 py-3\"\n          />\n          {error && <p className=\"text-red-600 text-sm\">{error}</p>}\n          <button\n            type=\"submit\"\n            className=\"bg-brand text-white px-5 py-3 rounded-xl font-semibold hover:bg-brand-dark transition\"\n          >\n            Unlock\n          </button>\n        </form>\n      </section>\n    </Layout>\n  );\n}\n\n// Profile page (client-only)\nfunction ResumeProfile({ profileKey }) {\n  // invert PROFILE_MAP to find by key\n  console.log(\"PROFILE_MAP:\", PROFILE_MAP);\n  console.log(\"profileKey:\", profileKey);\n  const profiles = Object.values(PROFILE_MAP).reduce((acc, p) => {\n    acc[p.key] = p;\n    return acc;\n  }, {});\n  const p = profiles[profileKey];\n\n  if (!p) {\n    return (\n      <Layout>\n        <SEO title=\"Resume Not Found\" />\n        <section className=\"max-w-md mx-auto px-6 pt-16 pb-24\">\n          <h1 className=\"text-2xl font-semibold\">Not found</h1>\n          <p className=\"mt-2 text-gray-600\">This resume link is invalid. Try again from the password page.</p>\n        </section>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout>\n      <SEO title={p.title} />\n      <section className=\"max-w-3xl mx-auto px-6 pt-12 pb-24\">\n        <div className=\"flex items-center justify-between\">\n          <h1 className=\"text-2xl font-bold\">{p.title}</h1>\n          <a\n            href={p.file}\n            className=\"text-sm underline underline-offset-4\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Download PDF\n          </a>\n        </div>\n\n        <div className=\"mt-6 rounded-xl border overflow-hidden\">\n          <iframe\n            title={p.title}\n            src={p.file}\n            className=\"w-full\"\n            style={{ height: \"80vh\" }}\n          />\n        </div>\n      </section>\n    </Layout>\n  );\n}\n\nexport default function ResumePage() {\n  // Client-only routes under /resume/*\n  return (\n    <>\n      {/* Default gate at /resume */}\n      <Router basepath=\"/resume\">\n        <ResumeGate path=\"/\" />\n        {/* dynamic profile route, e.g. /resume/tech-lead */}\n        <ResumeProfile path=\"/:profileKey\" />\n      </Router>\n    </>\n  );\n}"],"names":["PROFILE_MAP","OpenSesame","key","title","file","PrimeTPM","FSX2025","ResumeGate","pwd","setPwd","useState","error","setError","React","Layout","SEO","className","onSubmit","e","preventDefault","profile","trim","navigate","type","placeholder","value","onChange","target","ResumeProfile","_ref","profileKey","console","log","profiles","Object","values","reduce","acc","p","href","rel","src","style","height","ResumePage","Router","basepath","path"],"sourceRoot":""}